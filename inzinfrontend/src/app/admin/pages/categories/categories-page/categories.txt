import { Component, OnInit, ViewChild, TemplateRef } from '@angular/core';
import { MatTableDataSource } from '@angular/material/table';
import { MatPaginator } from '@angular/material/paginator';
import { MatSort } from '@angular/material/sort';
import { UserModel } from 'src/app/admin/pages/shared/models/UserModel';
import { AdminserviceService } from '../../shared/services/adminservice.service';
import {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';
import { FormGroup, FormBuilder, Validators, FormControl,FormArray } from '@angular/forms';
import { MatSnackBar, MatSnackBarConfig } from '@angular/material';
@Component({
  selector: 'app-categories-page',
  templateUrl: './categories-page.component.html',
  styleUrls: ['./categories-page.component.css']
})
export class CategoriesPageComponent implements OnInit {

  displayedColumns = ['name','username', 'password','email','role','isactive'];
  //users:UserModel[]=[{username:"hello",password:"Hello",name:"Logan"}];
  dataSource: MatTableDataSource<UserModel>;
  categoryForm:FormGroup;
  public contactList: FormArray;
  email = new FormControl('', [Validators.required, Validators.email]);
  username=new FormControl('', [Validators.required]);
  password=new FormControl('', [Validators.required]);
  name=new FormControl('', [Validators.required]);
  errors:any={};
  spinner:boolean=false;
 
 
  

  @ViewChild(MatPaginator,{"static":false}) paginator: MatPaginator;
  @ViewChild(MatSort,{"static":false}) sort: MatSort;
  @ViewChild('dialog',{"static":false}) template: TemplateRef<HTMLElement>;
  constructor( private adminservice:AdminserviceService,private _snackBar: MatSnackBar,public dialog: MatDialog,private formBuilder: FormBuilder) {}

  applyFilter(filterValue: string) {
    filterValue = filterValue.trim(); // Remove whitespace
    filterValue = filterValue.toLowerCase(); // Datasource defaults to lowercase matches
    this.dataSource.filter = filterValue;
  }
  // convenience getter for easy access to form fields
get f() { return this.categoryForm.controls; }

openSnackBar(message:string) {
  let config = new MatSnackBarConfig();
    config.verticalPosition = 'bottom';
    config.horizontalPosition = 'center';
    config.duration = 2000;
   
  this._snackBar.open(message, 'Close',config);
}
  openDialog(): void {
    const dialogRef = this.dialog.open(this.template, {
      height: '400px',
     width: '600px',
    
    });

    dialogRef.afterClosed().subscribe(result => {
      console.log('The dialog was closed');
     
    });
  }

  closeDialog(){
    this.dialog.closeAll();
  }

 

  // Submitting the form to register the users

  onSubmit()
  {
     
      this.adminservice.registerUser(this.f.username.value,this.f.password.value,this.f.role.value,this.f.isactive.value,this.f.name.value,this.f.email.value).subscribe(data=>{
        if(data["status"])
        {
          this.openSnackBar(data["message"]);
          this.closeDialog();
          this.getUsers();
        }
        else{
          this.openSnackBar("username or email already registered");
        }
        //console.log(data);
      })  
        
  }

  getUsers()
  {
    this.spinner=true;
    this.adminservice.getUsers().subscribe(data=>{

      this.dataSource = new MatTableDataSource <UserModel>(data);
      this.dataSource.paginator = this.paginator;
      this.dataSource.sort = this.sort;
      this.spinner=false;

  // console.log(data);

    })
  }
get Category()
{
  return this.categoryForm.get("subcategories") as FormArray;
}
  

addChildCategory()
  {
  
    this.Category.push(this.formBuilder.control(""));
   
  }

  removeItem() {
    //this.Category.pop();
    if(this.Category.length>1)
    {
      this.Category.removeAt(this.Category.length - 1);
    }

    
 }
 

ngOnInit()
{
  this.getUsers();
  this.categoryForm = this.formBuilder.group({
   maincategory:["",Validators.required],
   seo_title:[""],
   seo_heading:[""],
   seo_slug:[""],
   seo_category_Description:[""],
   page_content:[""],
   seo_keyword:[""],
    subcategories:this.formBuilder.array([
     this.formBuilder.control("")
  

    ])
 });

//

 
}

}
///////////////////////////////


<body>
    <div class="container-scroller">
      <!--PArtial navbar-->
     <app-navbar></app-navbar>
      
      <!-- partial -->
      <div class="container-fluid page-body-wrapper">
        <div class="row row-offcanvas row-offcanvas-right">
          <!-- partial:partials/_settings-panel.html -->
          <app-settings></app-settings>
        
          <!-- partial -->
          <!-- partial:partials/_sidebar.html -->
          <app-sidebar></app-sidebar>
        
          <!-- partial -->
          <div class="content-wrapper">
            <div class="col-md-2" style="margin-top: 200px;">
              <button mat-raised-button color="primary" 
              (click)="openDialog()"
              matTooltip="Click To Add A New User"
              >New Category</button>
            </div>
            <div class="col-md-6">
                <div class="example-header ">
                  <mat-form-field>
                    <input matInput (keyup)="applyFilter($event.target.value)" placeholder="Filter">
                  </mat-form-field>
                </div>
              </div>

              <div [style.display]="spinner? 'block':'none'" class="lds-spinner"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>
             
            <mat-table [dataSource]="dataSource" matSort >
            
                <!-- ID Column -->
                <ng-container matColumnDef="name">
                    <mat-header-cell *matHeaderCellDef mat-sort-header>Name</mat-header-cell>
                    <mat-cell *matCellDef="let row"> {{row.name}} </mat-cell>
                  </ng-container>
                <ng-container matColumnDef="username">
                  <mat-header-cell *matHeaderCellDef mat-sort-header>Username</mat-header-cell>
                  <mat-cell *matCellDef="let row"> {{row.username}} </mat-cell>
                </ng-container>
            
                <!-- Progress Column -->
                <ng-container matColumnDef="password">
                  <mat-header-cell *matHeaderCellDef mat-sort-header > Password </mat-header-cell>
                  <mat-cell *matCellDef="let row" > {{row.password}}  </mat-cell>
                </ng-container>

                  <!-- Progress Column -->
                  <ng-container matColumnDef="email">
                    <mat-header-cell *matHeaderCellDef mat-sort-header > Email </mat-header-cell>
                    <mat-cell *matCellDef="let row"  style="word-wrap: break-word"> {{row.email}}  </mat-cell>
                  </ng-container>

                    <!-- Progress Column -->
                <ng-container matColumnDef="role">
                  <mat-header-cell *matHeaderCellDef mat-sort-header > Role </mat-header-cell>
                  <mat-cell *matCellDef="let row" > {{row.role}}  </mat-cell>
                </ng-container>


                  <!-- Progress Column -->
                  <ng-container matColumnDef="isactive">
                    <mat-header-cell *matHeaderCellDef mat-sort-header > Isactive </mat-header-cell>
                    <mat-cell *matCellDef="let row" > {{row.isactive}}  </mat-cell>
                  </ng-container>
            
              
          
                <mat-header-row *matHeaderRowDef="displayedColumns"></mat-header-row>
                <mat-row *matRowDef="let row; columns: displayedColumns;">
                </mat-row>
              </mat-table>
            
              <mat-paginator [pageSizeOptions]="[5, 10, 25, 100]"></mat-paginator>
          </div>
          <ng-template #dialog>
            <form [formGroup]="categoryForm" (ngSubmit)="onSubmit()">

          
            <ol>
              <li>
                <mat-form-field  [style.width.px]=327 >
                  <input matInput formControlName="maincategory" placeholder="Category Name">
                  </mat-form-field>
              </li>

              <li>
                <mat-form-field  [style.width.px]=327 >
                  <input matInput formControlName="seo_title" placeholder="SEO TITLE">
                   </mat-form-field>
              </li>

              <li>
                <mat-form-field  [style.width.px]=327 >
                  <input matInput formControlName="seo_heading" placeholder="SEO HEADING">
                 </mat-form-field>
              </li>


              <li>
                <mat-form-field  [style.width.px]=327 >
                  <input matInput formControlName="seo_slug" placeholder="SEO SLUG">
                   </mat-form-field>
              </li>

              <li>
                <mat-form-field  [style.width.px]=327 >
                  <textarea matInput formControlName="seo_category_Description"  placeholder="SEO CATEGORY DESCRIPTION"></textarea>
                  </mat-form-field>
              </li>

              <li>
                <mat-form-field  [style.width.px]=327 >
                  <textarea matInput formControlName="page_content"  placeholder="PAGE CONTENT"></textarea>
              </mat-form-field>
              </li>

              <li>
                <mat-form-field  [style.width.px]=327 >
                  <textarea matInput formControlName="seo_keyword"  placeholder="SEO KEYWORDS"></textarea>
                 </mat-form-field>
              </li>

              
            
            

               <div formArrayName="subcategories">
                
                  <mat-icon style="cursor: pointer;"(click)="addChildCategory()"  matTooltip="Add the Subcategory">add_to_photos</mat-icon>
  
               

                <div *ngFor="let sub of categoryForm.get('subcategories').controls; let i=index">

                  <mat-form-field  [style.width.px]=327 >
                    <input matInput [formControlName]="i" placeholder="Sub Category Name">
                    
                    <mat-error *ngIf="errors.name">{{errors.name}}</mat-error>
                  
                  </mat-form-field>
                  

                </div>
              
                <mat-icon style="cursor: pointer;"(click)="removeItem()" matTooltip="Remove the Subcategory" >remove_from_queue</mat-icon>
               </div>
            
                <li>
                
                
                  <button mat-raised-button color="primary"
                  type="submit" 
             
              matTooltip="Click To Submit The Form"
              >Submit</button>
            
              </li>
            </ol>
          </form>
          </ng-template>
         
          <!-- content-wrapper ends -->
          <!-- partial:partials/_footer.html -->
          <app-footer></app-footer>
          <footer class="footer">
            <div class="container-fluid clearfix">
              <span class="text-muted d-block text-center text-sm-left d-sm-inline-block">Copyright © 2017 <a href="#">UrbanUI</a>. All rights reserved.</span>
              <span class="float-none float-sm-right d-block mt-1 mt-sm-0 text-center">Hand-crafted & made with <i class="mdi mdi-heart text-danger"></i></span>
            </div>
          </footer>
          <!-- partial -->
        </div>
        <!-- row-offcanvas ends -->
      </div>
      <!-- page-body-wrapper ends -->
    </div>
    <!-- container-scroller -->
  
    
  </body>
  
  